@model BerretDecailletBookingGUI.ViewModel.SearchVM

@{
    ViewBag.Title = "Index";

}

@section topBackgroundImage{
    <div class="top-image">
        <div class="row search">
            <div class="col s4 offset-s7">
                <div class="card-panel teal lighten-2">
                    @using (Html.BeginForm("List", "Rooms", FormMethod.Post))
                    {
                        <div class="card-content white-text">
                            <h5 class="card-title">Search</h5>
                            <p>
                                <label class="white-text" for="checkin">Check-in</label>
                                @Html.Editor("CheckIn", new { htmlAttributes = new { @class = "datepicker" } })
                            </p>
                            <p>
                                <label class="white-text" for="checkout">Check-out</label>
                                @Html.Editor("CheckOut", new { htmlAttributes = new { @class = "datepicker" } })
                            </p>
                            <p>
                                <div class="input-field col s12">
                                    <select required class="form-control" id="Location" name="Location">
                                        <option disabled selected value="">Location</option>
                                        @foreach (String location in Model.Locations)
                                        {
                                            <option value="@location">@location</option>
                                        }
                                    </select>
                                    <label class="white-text">Choose your destination</label>
                                </div>
                            </p>
                        </div>
                        <div class="card-action">
                            <button class="btn waves-effect waves-light" type="submit" name="action">
                                Search
                                <i class="material-icons right">search</i>
                            </button>
                        </div>
                    }
                </div>

            </div>

        </div>
    </div>
}

@if (TempData["Success"] != null)
{
    <div class="row">
        <div class="col s12">
            <div class="chip green darken-1">
                @TempData["Success"]
            </div>
        </div>
    </div>
}

@if (TempData["Error"] != null)
            {
    <div class="row">
        <div class="col s12">
            <div class="chip deep-orange darken-1">
                @TempData["Error"]
            </div>
        </div>
    </div>

}



@section scripts{
    <script>
        $(document).ready(function () {
            var date = new Date();

            $('select').material_select();

            $('.datepicker').pickadate({
                min: new Date(date.getFullYear(), date.getMonth(), date.getDate()),
                max: new Date(date.getFullYear(), date.getMonth() + 6, date.getDate()),
                today: 'Today',
                clear: 'Clear',
                close: 'Ok',
                closeOnSelect: false // Close upon selecting a date,
            });

            // snippet found https://github.com/amsul/pickadate.js/issues/690
            // to update automatically when datepicker is modified
            $('.datepicker').on('change', function () {
                if ($(this).attr('id') === 'CheckIn') {
                    $('#CheckOut').pickadate('picker').set('min', $(this).val());
                }
                if ($(this).attr('id') === 'CheckOut') {
                    $('#CheckIn').pickadate('picker').set('max', $(this).val());
                }
            });
        });
    </script>

}
